// DEBUGGING. HANDLING EXCEPTIONS
// üìÄüíøüíø

// 1.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é sumSliceArray(arr, first, second), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ arr —ñ –¥–≤–∞ —á–∏—Å–ª–∞ (first –∏ second) ‚Äì
// –ø–æ—Ä—è–¥–∫–æ–≤—ñ –Ω–æ–º–µ—Ä–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É, —è–∫—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Å–∫–ª–∞—Å—Ç–∏. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –≤–≤–µ–ª–∏ 3 —Ç–∞ 5 ‚Äì —Å—É–º—É—é—Ç—å—Å—è 3-–π —Ç–∞ 5-–π –µ–ª–µ–º–µ–Ω—Ç–∏.
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –≤–∏–Ω—è—Ç–∫–∏, —è–∫—â–æ –±—É–ª–∏ –≤–≤–µ–¥–µ–Ω—ñ –Ω–µ —á–∏—Å–ª–∞, —ñ –∫–æ–ª–∏ –æ–¥–Ω–µ –∑ —á–∏—Å–µ–ª –∞–±–æ –æ–±–∏–¥–≤–∞ –±—ñ–ª—å—à–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É–∑–∞ –¥–æ–≤–∂–∏–Ω—É –º–∞—Å–∏–≤—É.
// –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü—é —Ñ—É–Ω–∫—Ü—ñ—é, –ø–µ—Ä–µ–¥–±–∞—á—Ç–µ –æ–±—Ä–æ–±–∫—É –º–æ–∂–ª–∏–≤–∏—Ö –≤–∏–Ω—è—Ç–∫—ñ–≤.
// const arr1 = [5, 8, 1, 0, "gh"];
// const sumSliceArray = function (arr, first, second) {
//   const elementFirst = arr[first];
//   const elementSecond = arr[second];

//   if (arr.length === 0) {
//     throw `Empty array`;
//   }
//   const getTypeItem = arr.filter(function (item) {
//     return typeof item !== "number";
//   });
//   const itemArray = getTypeItem[0];
//   if (typeof itemArray !== "number" && itemArray === elementFirst) {
//     throw "data in the array is not number";
//   }
//   if (typeof itemArray !== "number" && itemArray === elementSecond) {
//     throw "data in the array is not number";
//   }

//   if (
//     first > arr.length ||
//     first > arr.length ||
//     first === second ||
//     first < 0 ||
//     second < 0
//   ) {
//     throw `The data of the set values  not correct`;
//   }
//   if (typeof first !== "number" || typeof second !== "number") {
//     throw `The data type is not number`;
//   }

//   const sumArg = elementFirst + elementSecond;
//   return sumArg;
// };

// try {
//   console.log(sumSliceArray(arr1, 1, 4));
// } catch (error) {
//   console.error(error);
// }
// 2.
// –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é checkAge(), —è–∫–∞ –∑–∞–ø–∏—Ç—É—î —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –π–æ–≥–æ —ñ–º'—è, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—É—Å
// (–∞–¥–º—ñ–Ω, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á) —Ç–∞ –≥–µ–Ω–µ—Ä—É—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –ø–æ–º–∏–ª–∫–æ—é, —è–∫—â–æ:–≤—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –º–µ–Ω—à–µ 18 –∞–±–æ –±—ñ–ª—å—à–µ 70 —Ä–æ–∫—ñ–≤
// (–≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –ø–æ–º–∏–ª–∫–∞ —Ç–∏–ø—É RangeError).–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–≤—ñ–≤ –∂–æ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö –≤ –±—É–¥—å-—è–∫–æ–º—É –ø–æ–ª—ñ
//  (–≤–∏–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è The field is empty! Please enter your age –∑ —Ç–∏–ø–æ–º –ø–æ–º–∏–ª–∫–∏ Error).
//  –£ –ø–æ–ª—ñ —Å—Ç–∞—Ç—É—Å –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ —Å–ª–æ–≤–æ (—Ç–∏–ø –ø–æ–º–∏–ª–∫–∏ EvalError).–≤ –ø–æ–ª—ñ –≤—ñ–∫ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ—á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è.
//   –£ –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ç—Ä–∏–º–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É —Ñ—ñ–ª—å–º—É.
//    –£ –±–ª–æ—Ü—ñ catch –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤–∏–≤–µ–¥–µ–Ω–Ω—è –Ω–∞–∑–≤–∏ —Ç–∞ –æ–ø–∏—Å—É –ø–æ–º–∏–ª–∫–∏.
let name;
let age;
let status;

const checkAge = function (name, age, status) {
  if (name === "" || age === "" || status === "") {
    throw "The field is empty! Please enter your age –∑ —Ç–∏–ø–æ–º –ø–æ–º–∏–ª–∫–∏ Error";
  }

  if (typeof name !== "string") {
    throw "Wrong type given, expected a string";
  }
  if (typeof age !== "number") {
    throw "Wrong type given, expected a number";
  }
  if (age <= 18 || age >= 70) {
    throw new RangeError("The argument must be between 18 and 70 ");
  }

  if (status !== "–∞–¥–º—ñ–Ω" && status !== "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä" && status !== "–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á") {
    throw new EvalError("Data: –∞–¥–º—ñ–Ω, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á");
  }

  return alert(
    `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ç—Ä–∏–º–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É —Ñ—ñ–ª—å–º—É  ${typeof name}, ${typeof age}, ${status}`
  );
};

try {
  console.log(checkAge("Nadia", 22, "–∞–¥–º—ñ–Ω"));
} catch (error) {
  console.error(error);
}
// 3.
// –†–µ–∞–ª—ñ–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é calcRectangleArea(width, height), —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —à–∏—Ä–∏–Ω–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ width —ñ
//  –≤–∏—Å–æ—Ç–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ height
// —ñ –æ–±—Ä–∞—Ö–æ–≤—É—î –π–æ–≥–æ –ø–ª–æ—â—É. –ü–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏ –ø—Ä–∏–ø–∏–Ω–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–∏ —ñ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –≤–∏–Ω—è—Ç–∫—É —É –≤–∏–ø–∞–¥–∫—É,
// —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–µ —á–∏—Å–ª–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏.
// –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü—é —Ñ—É–Ω–∫—Ü—ñ—é —Ç–∞ –æ–±—Ä–æ–±–ª—è—î –º–æ–∂–ª–∏–≤—ñ –≤–∏–Ω—è—Ç–∫–æ–≤—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó.
// const calcRectangleArea = function (width, height) {
//   const areaRectangle = width * height;
//   if (typeof width !== "number" || typeof height !== "number") {
//     throw `The data of the set values  not correct!!!`;
//   }
//   if (width <= 0 || height <= 0) {
//     throw `Side rectangle can't negative value!!!`;
//   }
//   return areaRectangle;
// };
// try {
//   console.log(calcRectangleArea(10, 5));
// } catch (error) {
//   console.error(error);
// }
// 4.
// –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å MonthException, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —è–∫–æ–≥–æ –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä message —ñ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø–æ–ª–µ name –∑–Ω–∞—á–µ–Ω–Ω—è–º MonthException.
// –†–µ–∞–ª—ñ–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é showMonthName(month), –≤ —è–∫—ñ–π –ø–∞—Ä–∞–º–µ—Ç—Ä month ‚Äì —Ü–µ –ø–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä –º—ñ—Å—è—Ü—è –≤ —Ä–æ—Ü—ñ.
//  –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–∑–≤—É –º—ñ—Å—è—Ü—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º—ñ—Å—è—Ü—è.
//  –£ –≤–∏–ø–∞–¥–∫—É –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥—É –∫–∏–¥–∞—î—Ç—å—Å—è –µ–∫—Å–µ–ø—à–Ω —É –≤–∏–≥–ª—è–¥—ñ –æ–±‚Äô—î–∫—Ç–∞ –∫–ª–∞—Å—É MonthException
//   –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º Incorrect month number.
// –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü—é —Ñ—É–Ω–∫—Ü—ñ—é, –ø–µ—Ä–µ–¥–±–∞—á—Ç–µ –æ–±—Ä–æ–±–∫—É –º–æ–∂–ª–∏–≤–∏—Ö –≤–∏–Ω—è—Ç–∫—ñ–≤.
// –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–∏:
// console.log(showMonthName(5));
// May
// console.log(showMonthName(14));
// MonthException Incorrect month number
// class MonthException extends Error {
//   constructor(message) {
//     super(message);
//     this.name = "MonthException";
//     this.message = "Incorrect month number";
//   }
// }

// const showMonthName = function (month) {
//   switch (month) {
//     case 1:
//       return "January";
//     case 2:
//       return "February";
//     case 3:
//       return "March";
//     case 4:
//       return "April";
//     case 5:
//       return "May";
//     case 6:
//       return "June";
//     case 7:
//       return "July";
//     case 8:
//       return "August";
//     case 9:
//       return "September";
//     case 10:
//       return "October";
//     case 11:
//       return "November";
//     case 12:
//       return "December";
//   }
//   if (typeof month !== "number" || month <= 0 || month > 12) {
//     throw new MonthException(MonthException.message);
//   }
// };

// try {
//   console.log(showMonthName(5));
// } catch (error) {
//   console.error(error.name);
//   console.error(error.message);
// }

// –†–µ–∞–ª—ñ–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é showUser(id), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–µ id —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±‚Äô—î–∫—Ç, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–¥–∞–Ω–æ—ó id.
// –¢–∞–∫–æ–∂ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–∏–¥–∞—î –ø–æ–º–∏–ª–∫—É —É —Ä–∞–∑—ñ —è–∫—â–æ –≤–≤–µ–¥–µ–Ω–æ –≤—ñ–¥‚Äô—î–º–Ω–µ id.
// –†–µ–∞–ª—ñ–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é showUsers(ids), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏—Ö –∞–π–¥—ñ ids,
// –ø–µ—Ä–µ–≤—ñ—Ä—è—î –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º —Ñ—É–Ω–∫—Ü—ñ—ó showUser() –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É ids –Ω–∞ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å,
//  –≤ —Ä–∞–∑—ñ –≤–∏–∫–ª—é—á–Ω–æ—ó —Å–∏—Ç—É–∞—Ü—ñ—ó –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É. –§—É–Ω–∫—Ü—ñ—è showUsers(ids)
//   –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –æ–±‚Äô—î–∫—Ç—ñ–≤, –¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –∫–ª—é—á—ñ–≤ —î –∫–æ—Ä–µ–∫—Ç–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ ids.
const showUser = function (id) {
  const idObj = {};
  if (id <= 0) {
    throw `ID must not be negative `;
  }
  if (typeof id !== "number") {
    throw `type id is not Number`;
  }
  return { id };
};


try {
  console.log(showUser("5"));
} catch (error) {
  console.error(error);
}

const arr1 = [7, -12, 44, 22];
const showUsers = function (ids) {
  const negativeElem = ids.find(function (element) {
    return element <= 0;
  });

  const idsArrResult = ids
    .filter(function (element) {
      return element >= 0;
    })
    .map(function (element) {
      return showUser(element);
    });
  try {
    showUser(ids < 0);
  } catch (error) {
    console.error("Error: " + error + `:${negativeElem}`);
  }
  return idsArrResult;
};

try {
  console.log(showUsers(arr1));
} catch (error) {
  console.error(error);
}

// // –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–∏:
// // showUsers([7, -12, 44, 22]);
// // Error: ID must not be negative: -12
// // [ {id: 7}, {id: 44}, {id: 22} ]
